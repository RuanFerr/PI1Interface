/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.DocumentException;
import control.reserva.Equipamento;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DBC.EquipamentoDBC;
import model.pdf.PDFGenerator;

/**
 *
 * @author Kelli
 */
public class RelEquip extends javax.swing.JPanel {

    /**
     * Creates new form RelEquip
     */
    public RelEquip() {
        initComponents();
        fillTabAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabEquip = new javax.swing.JTable();
        btnGerarPDF = new javax.swing.JButton();

        tabEquip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nome", "Marca", "Descrição", "numero de serie"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabEquip);

        btnGerarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon-pdf-file.png"))); // NOI18N
        btnGerarPDF.setText("Gerar PDF");
        btnGerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGerarPDF))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGerarPDF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarPDFActionPerformed
        Object[] opcoes = {"Confirmar", "Cancelar"};
        if (JOptionPane.showOptionDialog(null, "Gerar PDF do registro?",
                "Alterar Registro",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcoes,
                opcoes[0]) == 0) {

            if (tabEquip.getSelectedRow() != -1) {

                Equipamento equip = new Equipamento();
                equip.setId(Integer.parseInt(String.valueOf(tabEquip.getValueAt(tabEquip.getSelectedRow(), 0))));
                equip.setNome(String.valueOf(tabEquip.getValueAt(tabEquip.getSelectedRow(), 1)));
                equip.setMarca(String.valueOf(tabEquip.getValueAt(tabEquip.getSelectedRow(), 2)));
                equip.setDescricao(String.valueOf(tabEquip.getValueAt(tabEquip.getSelectedRow(), 3)));
                equip.setNumSerie(Integer.parseInt(String.valueOf(tabEquip.getValueAt(tabEquip.getSelectedRow(), 4))));

                List<Equipamento> list = new ArrayList();

                list.add(equip);

                PDFGenerator EquipPDF = new PDFGenerator();

                try {
                    EquipPDF.exportarEquipamentos(list);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

                EquipamentoDBC eq = new EquipamentoDBC();
                List<Equipamento> list = eq.select();

                PDFGenerator equipPDF = new PDFGenerator();
                try {
                    equipPDF.exportarEquipamentos(list);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
        }
    }//GEN-LAST:event_btnGerarPDFActionPerformed

    private void fillTabAll() {

        EquipamentoDBC eq = new EquipamentoDBC();
        List<Equipamento> list = eq.select();
        DefaultTableModel dtm = (DefaultTableModel) tabEquip.getModel();

        dtm.setNumRows(0);

        for (Equipamento equip : list) {

            Object[] row = {equip.getId(),
                equip.getNome(),
                equip.getMarca(),
                equip.getDescricao(),
                equip.getNumSerie()

            };

            dtm.addRow(row);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerarPDF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabEquip;
    // End of variables declaration//GEN-END:variables
}
