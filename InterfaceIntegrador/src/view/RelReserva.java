/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.DocumentException;
import control.reserva.Equipamento;
import control.reserva.Reserva;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DBC.EquipamentoDBC;
import model.DBC.ReservaDBC;
import model.pdf.PDFGenerator;

/**
 *
 * @author Kelli
 */
public class RelReserva extends javax.swing.JPanel {

    /**
     * Creates new form RelReserva
     */
    public RelReserva() {
        initComponents();

        fillTabAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabReserva = new javax.swing.JTable();
        cbBusca = new javax.swing.JComboBox<String>();
        btBuscar = new javax.swing.JButton();
        btnGerarPDF = new javax.swing.JButton();

        tabReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NomeEquipamento", "dataReserva", "Responsavel", "CPFResponsavel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabReserva);

        cbBusca.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "todos", "efetuadas", "em atraso" }));
        cbBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBuscaActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btnGerarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon-pdf-file.png"))); // NOI18N
        btnGerarPDF.setText("Gerar PDF");
        btnGerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cbBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                .addComponent(btnGerarPDF)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGerarPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbBusca)
                    .addComponent(btBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(339, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(65, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarPDFActionPerformed
        Object[] opcoes = {"Confirmar", "Cancelar"};
        if (JOptionPane.showOptionDialog(null, "Gerar PDF do registro?",
                "Alterar Registro",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcoes,
                opcoes[0]) == 0) {

            if (tabReserva.getSelectedRow() != -1) {

                List<Reserva> list = new ArrayList();

                Reserva res = new Reserva();

                ReservaDBC resDB = new ReservaDBC();

                res = resDB.selectReserva(Integer.parseInt(String.valueOf(tabReserva.getValueAt(tabReserva.getSelectedRow(), 0))));

                list.add(res);

                PDFGenerator ResPDF = new PDFGenerator();

                try {
                    ResPDF.exportarReservas(list);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

                ReservaDBC resDB = new ReservaDBC();
                List<Reserva> list = resDB.select();

                PDFGenerator equipPDF = new PDFGenerator();
                try {
                    equipPDF.exportarReservas(list);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
        }
    }//GEN-LAST:event_btnGerarPDFActionPerformed

    private void cbBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBuscaActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        String busca = String.valueOf(cbBusca.getSelectedItem());

        switch (busca) {
            case ("todos"):
                fillTabAll();
                break;

            default:

                ReservaDBC rs = new ReservaDBC();
                List<Reserva> list = rs.select();
                DefaultTableModel dtm = (DefaultTableModel) tabReserva.getModel();

                dtm.setNumRows(0);

                String src;
                if (busca.equalsIgnoreCase("efetuadas")) {
                    src = "locado";
                } else {
                    src = "atrasado";
                }

                for (Reserva res : list) {

                    Equipamento eq;
                    EquipamentoDBC eqDB = new EquipamentoDBC();
                    eq = eqDB.selectEquip(res.getEquipamento().getId());
                    if (res.getStatus().equalsIgnoreCase(src)) {
                        Object[] row = {res.getIdReserva(),
                            eq.getNome() + " -- " + eq.getId(),
                            res.getDataHoraReserva(),
                            res.getNomeResponsavel(),
                            res.getCpfResp()

                        };

                        dtm.addRow(row);
                    }
                }

                break;
        }

    }//GEN-LAST:event_btBuscarActionPerformed

    private void fillTabAll() {

        ReservaDBC resDB = new ReservaDBC();
        List<Reserva> list = resDB.select();

        DefaultTableModel dtm = (DefaultTableModel) tabReserva.getModel();
        dtm.setNumRows(0);

        for (Reserva res : list) {

            Equipamento eq;
            EquipamentoDBC eqDB = new EquipamentoDBC();
            eq = eqDB.selectEquip(res.getEquipamento().getId());

            Object[] row = {res.getIdReserva(),
                eq.getNome() + " -- " + eq.getId(),
                res.getDataHoraReserva(),
                res.getNomeResponsavel(),
                res.getCpfResp()

            };

            dtm.addRow(row);

        }

    }

    private List<Reserva> buscarRes() {

        String busca = String.valueOf(cbBusca.getSelectedItem());

        List<Reserva> list = new ArrayList();

        ReservaDBC resDB = new ReservaDBC();

        switch (busca) {
            case ("todos"):

                list = resDB.select();

                break;

            default:

                List<Reserva> lista = resDB.select();

                String src;
                if (busca.equalsIgnoreCase("efetuadas")) {
                    src = "locado";

                } else {
                    src = "atrasado";
                }

                for (Reserva res : list) {

                    Equipamento eq;
                    EquipamentoDBC eqDB = new EquipamentoDBC();
                    eq = eqDB.selectEquip(res.getEquipamento().getId());

                    if (res.getStatus().equalsIgnoreCase(src)) {

                        list.add(res);

                    };

                }
                break;
        }

        return list;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btnGerarPDF;
    private javax.swing.JComboBox<String> cbBusca;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabReserva;
    // End of variables declaration//GEN-END:variables
}
