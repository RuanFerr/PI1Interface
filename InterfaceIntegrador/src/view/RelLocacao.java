/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.DocumentException;
import control.reserva.Equipamento;
import control.reserva.Locacao;
import control.reserva.Reserva;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DBC.EquipamentoDBC;
import model.DBC.LocacaoDBC;
import model.DBC.ReservaDBC;
import model.pdf.PDFGenerator;

/**
 *
 * @author Kelli
 */
public class RelLocacao extends javax.swing.JPanel {

    /**
     * Creates new form RelLocacao
     */
    public RelLocacao() {
        initComponents();
        try {
            fillTabAll();
        } catch (ParseException ex) {
            Logger.getLogger(RelLocacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabLocacao = new javax.swing.JTable();
        btnGerarPDF = new javax.swing.JButton();
        cbBuscar = new javax.swing.JComboBox<String>();
        btBuscar = new javax.swing.JButton();

        tabLocacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID da Locação", "Equipamento", "Responsavel", "Data da locação", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabLocacao);

        btnGerarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon-pdf-file.png"))); // NOI18N
        btnGerarPDF.setText("Gerar PDF");
        btnGerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarPDFActionPerformed(evt);
            }
        });

        cbBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "todos", "efetuadas", "devolvidas", "em atraso" }));

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGerarPDF)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGerarPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbBuscar)
                    .addComponent(btBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarPDFActionPerformed
        Object[] opcoes = {"Confirmar", "Cancelar"};
        if (JOptionPane.showOptionDialog(null, "Gerar PDF do registro?",
                "Alterar Registro",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcoes,
                opcoes[0]) == 0) {

            if (tabLocacao.getSelectedRow() != -1) {

                List<Locacao> list = new ArrayList();

                Locacao loc = new Locacao();

                LocacaoDBC locDB = new LocacaoDBC();

                loc = locDB.selectLocacao(Integer.parseInt(String.valueOf(tabLocacao.getValueAt(tabLocacao.getSelectedRow(), 0))));

                list.add(loc);

                PDFGenerator locPDF = new PDFGenerator();

                try {
                    locPDF.exportarLocacao(list);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

                LocacaoDBC resDB = new LocacaoDBC();
                List<Locacao> list = resDB.select();

                PDFGenerator equipPDF = new PDFGenerator();
                try {
                    equipPDF.exportarLocacao(list);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(RelEquip.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
        }
    }//GEN-LAST:event_btnGerarPDFActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        String busca = String.valueOf(cbBuscar.getSelectedItem());

        switch (busca) {
            case ("todos"): {
                try {
                    fillTabAll();
                } catch (ParseException ex) {
                    Logger.getLogger(RelLocacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            break;

            default:

                LocacaoDBC locDB = new LocacaoDBC();
                List<Locacao> list = locDB.select();
                DefaultTableModel dtm = (DefaultTableModel) tabLocacao.getModel();

                dtm.setNumRows(0);

                String src;
                if (busca.equalsIgnoreCase("efetuadas")) {
                    src = "locado";
                } else if (busca.equals("devolvidas")) {
                    src = "devolvido";
                } else {
                    src = "atrasado";
                }

                for (Locacao loc : list) {

                    Equipamento eq;

                    EquipamentoDBC eqDB = new EquipamentoDBC();
                    eq = eqDB.selectEquip(loc.getIdEquipamento());

                    if (loc.getStatus().equalsIgnoreCase(src)) {
                        Object[] row = {loc.getIdLocacao(),
                            eq.getNome() + " -- " + eq.getId(),
                            loc.getNomeResponsavel(),
                            loc.getDataLocacao(),
                            loc.getStatus()

                        };

                        dtm.addRow(row);
                    }
                }

                break;
        }


    }//GEN-LAST:event_btBuscarActionPerformed

    private void fillTabAll() throws ParseException {

        LocacaoDBC locDB = new LocacaoDBC();
        List<Locacao> lista = locDB.select();
        DefaultTableModel dtm = (DefaultTableModel) tabLocacao.getModel();
        dtm.setNumRows(0);

        for (Locacao loc : lista) {

            EquipamentoDBC eqDB = new EquipamentoDBC();

            Equipamento eq = eqDB.selectEquip(loc.getIdEquipamento());

            if (!loc.getStatus().equalsIgnoreCase("devolvido")) {

                loc.setStatus(testSituacao(loc.getDataLocacao()));

            };

            Object[] row = {loc.getIdLocacao(),
                eq.getNome() + " -- " + eq.getId(),
                loc.getNomeResponsavel(),
                loc.getDataLocacao(),
                loc.getStatus()};

            if (testSituacao(loc.getDataLocacao()).equalsIgnoreCase("atrasado") && !(loc.getStatus().equalsIgnoreCase("devolvido"))) {
                locDB.atrasado(loc);
            }

            dtm.addRow(row);

        }

    }

    private String testSituacao(String data) throws ParseException {

        Date dataLoc = control.reserva.Reserva.formatador.parse(data);

        dataLoc.setHours(23);
        dataLoc.setMinutes(59);
        dataLoc.setSeconds(59);

        Date dthj = new Date();

        if (dataLoc.before(dthj)) {

            return "atrasado";

        } else {
            return "locado";
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btnGerarPDF;
    private javax.swing.JComboBox<String> cbBuscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabLocacao;
    // End of variables declaration//GEN-END:variables
}
