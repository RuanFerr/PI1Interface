/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.reserva.Equipamento;
import control.reserva.Reserva;
import java.awt.BorderLayout;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.DBC.EquipamentoDBC;
import model.DBC.ReservaDBC;
import static view.Menu.MainPNL;

/**
 *
 * @author Climerio Neto
 */
public class RegReserva extends javax.swing.JPanel {

    /**
     * Creates new form regReservaNew
     */
    public RegReserva() {
        initComponents();
    }

    public RegReserva(int id) throws ParseException {

        initComponents();

        btRegistrar.setText("Alterar");

        this.id = id;

        ReservaDBC resDB = new ReservaDBC();
        Reserva res = resDB.selectReserva(id);

        Date data = control.reserva.Reserva.formatador.parse(res.getDataHoraReserva());

        Calendar calend = Calendar.getInstance();
        calend.setTime(data);

        btnAno.setModel(new javax.swing.DefaultComboBoxModel<>(control.reserva.Reserva.getAno()));
        Object ano = String.valueOf(calend.get(Calendar.YEAR));
        btnAno.setSelectedItem(ano);

        btnMes.setModel(new javax.swing.DefaultComboBoxModel<>(control.reserva.Reserva.getMes()));
        Object mes = String.valueOf(calend.get(Calendar.MONTH));
        btnMes.setSelectedItem(mes);

        btnDia.setModel(new javax.swing.DefaultComboBoxModel<>(retornaDias()));
        Object dia = String.valueOf(calend.get(Calendar.DAY_OF_MONTH));

        btnDia.setSelectedItem(dia);

        EquipamentoDBC eqDB = new EquipamentoDBC();
        Equipamento equip = eqDB.selectEquip(res.getEquipamento().getId());

        cbEquip.setModel(new javax.swing.DefaultComboBoxModel<>(retornaNomeItem()));

        String nomeItem = equip.getNome() + " -- " + equip.getId();

        cbEquip.setSelectedItem(nomeItem);

        nomeResponsavel.setText(res.getNomeResponsavel());

        CpfResp.setText(String.valueOf(res.getCpfResp()));

    }

    int id = -1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomeResponsavel = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CpfResp = new javax.swing.JTextField();
        btnAno = new javax.swing.JComboBox<String>();
        btRegistrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnMes = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        btnDia = new javax.swing.JComboBox<Object>();
        jLabel3 = new javax.swing.JLabel();
        cbEquip = new javax.swing.JComboBox<String>();
        jLabel4 = new javax.swing.JLabel();

        jLabel6.setText("CPF ");

        jLabel7.setText("Ano");

        btnAno.setModel(new javax.swing.DefaultComboBoxModel<>(control.reserva.Reserva.getAno()));
        btnAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnoActionPerformed(evt);
            }
        });

        btRegistrar.setText("Registrar");
        btRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistrarActionPerformed(evt);
            }
        });

        jLabel1.setText("MÃªs");

        btnMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesActionPerformed(evt);
            }
        });

        jLabel2.setText("Dia");

        btnDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiaActionPerformed(evt);
            }
        });

        jLabel3.setText("Equipamento");

        jLabel4.setText("Responsavel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cbEquip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(nomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(CpfResp, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)))
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btRegistrar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(btnAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEquip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CpfResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(btRegistrar)
                .addContainerGap(142, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnoActionPerformed
        btnMes.setModel(new javax.swing.DefaultComboBoxModel<>(control.reserva.Reserva.getMes()));
    }//GEN-LAST:event_btnAnoActionPerformed

    private void btRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistrarActionPerformed

        if (!nomeResponsavel.getText().isEmpty() && !CpfResp.getText().isEmpty() && testData()) {

            if (testNumCPF(CpfResp.getText()) && control.cadastro.Pessoa.testCPF(CpfResp.getText())) {

                String data = btnDia.getSelectedItem() + "/" + btnMes.getSelectedItem() + "/" + btnAno.getSelectedItem();

                try {
                    if (DataFutura(data)) {

                        Reserva res = new Reserva();

                        res.setDataHoraReserva(data);

                        res.setNomeResponsavel(nomeResponsavel.getText());

                        res.setCpfResp(CpfResp.getText());

                        res.setEquipamento(new Equipamento());

                        res.getEquipamento().setId(retornaId(cbEquip.getSelectedItem()));

                        ReservaDBC resDB = new ReservaDBC();

                        if (id == -1) {

                            resDB.insert(res);

                            BorderLayout bl = new BorderLayout();

                            MainPNL.setLayout(bl);
                            MainPNL.removeAll();
                            MainPNL.add(new RegReserva());

                            MainPNL.updateUI();

                        } else {

                            Object[] opcoes = {"Confirmar", "Cancelar"};
                            if (JOptionPane.showOptionDialog(null, "Deleja alterar este registro?",
                                    "Alterar Registro",
                                    JOptionPane.DEFAULT_OPTION,
                                    JOptionPane.QUESTION_MESSAGE,
                                    null,
                                    opcoes,
                                    opcoes[0]) == 0) {

                                res.setIdReserva(id);
                                resDB.update(res);

                                BorderLayout bl = new BorderLayout();

                                bl.addLayoutComponent(new SrcReserva(), null);

                                MainPNL.setLayout(bl);
                                MainPNL.removeAll();
                                MainPNL.add(new SrcReserva());

                                MainPNL.updateUI();

                            } else {
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Data invÃ¡lida");
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(RegReserva.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "CPF InvÃ¡lido");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Deve-se preencher os campos");
        }
    }//GEN-LAST:event_btRegistrarActionPerformed

    private void btnMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesActionPerformed
        btnDia.setModel(new javax.swing.DefaultComboBoxModel<>(retornaDias()));
    }//GEN-LAST:event_btnMesActionPerformed

    private void btnDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiaActionPerformed
        cbEquip.setModel(new javax.swing.DefaultComboBoxModel<>(retornaNomeItem()));
    }//GEN-LAST:event_btnDiaActionPerformed

    public String[] retornaDias() {

        if (btnMes.getSelectedItem().equals("abril") || btnMes.getSelectedItem().equals("junho") || btnMes.getSelectedItem().equals("setembro") || btnMes.getSelectedItem().equals("novembro")) {
            return control.reserva.Reserva.getDia30();
        } else if (btnMes.getSelectedItem().equals("fevereiro")) {
            return control.reserva.Reserva.getDia28();
        } else if (btnMes.getSelectedItem().equals("mÃªs")) {
            String[] vazio = {"dia"};
            return vazio;
        } else {

            return control.reserva.Reserva.getDia31();

        }

    }

    private String[] retornaNomeItem() {

        EquipamentoDBC DBEquip = new EquipamentoDBC();
        List<Equipamento> lista = DBEquip.select();
        int tmn = lista.size();
        String[] nomes = new String[tmn];

        for (int i = 0; i < lista.size(); i++) {

            nomes[i] = lista.get(i).getNome() + " -- " + lista.get(i).getId();

        }

        return nomes;
    }

    private boolean testNumCPF(String CPF) {
        boolean ok;
        try {
            Long num = Long.parseLong(CPF);
            ok = true;
        } catch (NumberFormatException e) {
            ok = false;
        }
        return ok;
    }

    private int retornaId(Object nEquip) {

        String nEq = String.valueOf(nEquip);

        int ind = nEq.lastIndexOf("--");
        System.out.println(ind);
        String strId = nEq.substring(ind + 3);
        System.out.println(strId);
        int ID = Integer.parseInt(strId);

        return ID;
    }

    private boolean testData() {

        boolean ano;
        boolean mes;
        boolean dia;
        boolean equip;
        ano = (!"ano".equals(String.valueOf(btnAno.getSelectedItem())));
        mes = (!"mÃªs".equals(String.valueOf(btnMes.getSelectedItem())));
        dia = (!"dia".equals(String.valueOf(btnDia.getSelectedItem())));
        equip = (!"".equals(String.valueOf(cbEquip.getSelectedItem())));

        return dia && mes && ano && equip;
    }

    private boolean DataFutura(String data) throws ParseException {

        boolean dataFutura = false;

        Date datahj = new Date();

        Date dataRes = control.reserva.Reserva.formatador.parse(data);

        dataRes.setHours(23);
        dataRes.setMinutes(59);
        dataRes.setSeconds(59);

        if (dataRes.after(datahj)) {
            dataFutura = true;
        }

        return dataFutura;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CpfResp;
    private javax.swing.JButton btRegistrar;
    private javax.swing.JComboBox<String> btnAno;
    private javax.swing.JComboBox<Object> btnDia;
    private javax.swing.JComboBox<String> btnMes;
    private javax.swing.JComboBox<String> cbEquip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField nomeResponsavel;
    // End of variables declaration//GEN-END:variables
}
